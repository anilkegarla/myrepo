pipeline {

    agent any
	
    tools {
	
        maven 'apache-maven-3.8.7' 
    }
    stages {
	    
        stage('code clone') {
            steps { 
			git branch: 'main', credentialsId: 'Git', url: 'https://github.com/anilkegarla/myrepo.git'
			}
			}
      
		stage('Unit testing') {  
            steps {
                sh 'mvn test'
            }
        }
		stage('Integration testing'){
            
            steps{
                
                   sh 'mvn verify -DskipUnitTests'
                    
              }
               
        }
		
		
        
        stage('maven package') {
            steps {
                sh 'mvn clean install'
            }
        }
		stage('Static code analysis'){
            
            steps {
			
			script{
                
          
                    withSonarQubeEnv(credentialsId: 'sonar-api-key') {
                        
                        sh 'mvn clean package sonar:sonar'
                  
                  }
                  }}}
				  
		stage('Quality Gates Status'){ 
		
           steps { 
          
		      waitForQualityGate abortPipeline: false, credentialsId: 'sonar-api-key'
            
			   

        }}
		
        stage('Upload War files to nexus') {
		
            steps {
			      
				 def def pom = readMavenPom file: 'pom.xml'
				 def nexusRepo = readMavenPom.version.endsWith ("SNAPSHOT") ?  " " : "demo-release" 
				 
              nexusArtifactUploader artifacts:
			  [[artifactId: 'ks',
			  classifier: '', 
			  file: 'target/anil.war',
			  type: 'war']],
			  credentialsId: 'nexus-auth', 
			  groupId: 'com.ksapp', 
			  nexusUrl: '3.138.188.64:8081',
			  nexusVersion: 'nexus3', protocol: 'http', repository: 'demo123', 
			  version: '1.0.0'
            }
        }
		

     
       

		
		
    }
}
